@startuml

title __AI's Class Diagram__\n

  package  {
    package Simulation {
      package Simulation.AI {
        abstract class AI {
            ~ longTermMemory : Memory[]
            {abstract} + react()
            + AI()
            ~ flee()
            ~ notifyNextRound()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class Memory {
            - time : int
            + Memory()
            + getThingMemorized()
            + getTime()
            + notifyNewRound()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class Status {
            - statuses : String[]
            - currentStatus : int
            - time : int
            + Status()
            + setStatus()
            + setStatus()
            + getStatus()
            + getStatusIndex()
            + getTime()
            + notifyNextRound()
            - contains()
            - search()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class GroupAI {
            - members : List<HunterAI>
            - time : int
            - hunting : boolean
            - goals : HashMap<HunterAI, Location>
            ~ GroupAI()
            ~ steerGroup()
            - steer()
            - twoMembersNearTarget()
            - isMemberNearMe()
            - isMemberNeaby()
            - calcGoals()
            - calcGoals()
            - getNearestLocByTarget()
            - getNearestLocation()
            - getDistance()
            - getNearestMember()
            ~ add()
            ~ remove()
            - getGroupStrength()
            - ungroup()
            + getGroupSize()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class HunterAI {
            - shortTermMemory : List<HunterMemory>
            + HunterAI()
            + react()
            - getShortTermMemory()
            - filterToLongTermMemory()
            - identifyPreyToHunt()
            - isHuntable()
            - identifyHuntablePrey()
            - identifyThreats()
            - getBiggestPrey()
            - getBiggest()
            ~ searchForGroupMembers()
            - inviteToGroup()
            - hunt()
            - moveRandomly()
            + joinGroup()
            + leaveGroup()
            - isGroupmember()
            ~ getBody()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class HunterMemory {
            - prio : int
            + HunterMemory()
            + getPriority()
            - calcPriority()
            + remove()
            + notifyNewRound()
            + compareTo()
        }
      }
    }
  }
  

  package  {
    package Simulation {
      package Simulation.AI {
        class PreyAI {
            + PreyAI()
            + react()
            - attackWeakHunter()
            - getNearestWeakHunter()
            - grass()
            - hasToFlee()
            - getNearbyThreats()
            - isThread()
            - filterToMemory()
            - saveToMemory()
        }
      }
    }
  }
  

  AI o-- Status : status
  AI o-- LivingCreature : owner
  AI +-down- Memory
  AI +-down- Status
  Memory o-- BoardObject : thingMemorized
  GroupAI o-- Prey : target
  GroupAI o-- HunterAI : leader
  GroupAI o-- DeadCorpse : corpse
  HunterAI -up-|> AI
  HunterAI o-- GroupAI : groupIntellingence
  HunterAI +-down- HunterMemory
  HunterMemory -up-|> Comparable
  HunterMemory -up-|> Memory
  Memory o-- BoardObject : thingMemorized
  PreyAI -up-|> AI
  Memory o-- BoardObject : thingMemorized


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
